{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["StripChart","state","domain","this","setState","selectedDomain","zoomDomain","width","height","scale","x","containerComponent","responsive","zoomDimension","onZoomDomainChange","handleZoom","bind","style","data","stroke","Date","y","padding","top","left","right","bottom","brushDimension","brushDomain","onBrushDomainChange","handleBrush","tickValues","tickFormat","getFullYear","React","Component","Led","props","name","on","LedMatrix","led_on","Array","fill","led_name","names","index","renderLed","ControlPanel","led_names","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6RAeMA,G,yDACF,aAAe,IAAD,8BACV,gBACKC,MAAQ,GAFH,E,uDAKHC,GACPC,KAAKC,SAAS,CAACC,eAAgBH,M,kCAGvBA,GACRC,KAAKC,SAAS,CAACE,WAAYJ,M,+BAI3B,OACI,gCACE,cAAC,IAAD,CACEK,MAAO,IACPC,OAAQ,IACRC,MAAO,CAACC,EAAG,QACXC,mBACI,cAAC,IAAD,CACEC,YAAY,EACZC,cAAc,IACdP,WAAYH,KAAKF,MAAMK,WACvBQ,mBAAoBX,KAAKY,WAAWC,KAAKb,QATjD,SAaE,cAAC,IAAD,CACEc,MAAO,CACHC,KAAM,CAACC,OAAQ,WAEnBD,KAAM,CACF,CAACR,EAAG,IAAIU,KAAK,KAAM,EAAG,GAAIC,EAAG,KAC7B,CAACX,EAAG,IAAIU,KAAK,KAAM,EAAG,GAAIC,EAAG,KAC7B,CAACX,EAAG,IAAIU,KAAK,KAAM,EAAG,GAAIC,EAAG,KAC7B,CAACX,EAAG,IAAIU,KAAK,KAAM,EAAG,GAAIC,EAAG,KAC7B,CAACX,EAAG,IAAIU,KAAK,KAAM,EAAG,GAAIC,EAAG,KAC7B,CAACX,EAAG,IAAIU,KAAK,KAAM,EAAG,GAAIC,EAAG,KAC7B,CAACX,EAAG,IAAIU,KAAK,KAAM,EAAG,GAAIC,EAAG,KAC7B,CAACX,EAAG,IAAIU,KAAK,KAAM,EAAG,GAAIC,EAAG,UAMrC,eAAC,IAAD,CACEd,MAAO,IACPC,OAAQ,GACRC,MAAO,CAACC,EAAG,QACXY,QAAS,CAACC,IAAK,EAAGC,KAAM,GAAIC,MAAO,GAAIC,OAAQ,IAC/Cf,mBACI,cAAC,IAAD,CAAuBC,YAAY,EACZe,eAAe,IACfC,YAAazB,KAAKF,MAAMI,eACxBwB,oBAAqB1B,KAAK2B,YAAYd,KAAKb,QATxE,UAaE,cAAC,IAAD,CACE4B,WAAY,CACR,IAAIX,KAAK,KAAM,EAAG,GAClB,IAAIA,KAAK,KAAM,EAAG,GAClB,IAAIA,KAAK,KAAM,EAAG,GAClB,IAAIA,KAAK,IAAM,EAAG,GAClB,IAAIA,KAAK,KAAM,EAAG,GAClB,IAAIA,KAAK,KAAM,EAAG,GAClB,IAAIA,KAAK,KAAM,EAAG,IAEtBY,WAAY,SAACtB,GAAD,OAAO,IAAIU,KAAKV,GAAGuB,iBAEjC,cAAC,IAAD,CACEhB,MAAO,CACHC,KAAM,CAACC,OAAQ,WAEnBD,KAAM,CACF,CAACR,EAAG,IAAIU,KAAK,KAAM,EAAG,GAAIC,EAAG,KAC7B,CAACX,EAAG,IAAIU,KAAK,KAAM,EAAG,GAAIC,EAAG,KAC7B,CAACX,EAAG,IAAIU,KAAK,KAAM,EAAG,GAAIC,EAAG,KAC7B,CAACX,EAAG,IAAIU,KAAK,KAAM,EAAG,GAAIC,EAAG,KAC7B,CAACX,EAAG,IAAIU,KAAK,KAAM,EAAG,GAAIC,EAAG,KAC7B,CAACX,EAAG,IAAIU,KAAK,KAAM,EAAG,GAAIC,EAAG,KAC7B,CAACX,EAAG,IAAIU,KAAK,KAAM,EAAG,GAAIC,EAAG,KAC7B,CAACX,EAAG,IAAIU,KAAK,KAAM,EAAG,GAAIC,EAAG,kB,GArF1Ba,IAAMC,YAgG/B,SAASC,EAAIC,GACT,OACE,oCAAOA,EAAMC,KAAb,MAAsBD,EAAME,GAAK,KAAO,MAAxC,O,IAIAC,E,kDACF,WAAYH,GAAQ,IAAD,8BACf,cAAMA,IACDpC,MAAQ,CACTwC,OAAQC,MAAM,GAAGC,MAAK,GACtBC,SAAUP,EAAMQ,OAJL,E,sDAOTC,GACN,OACQ,cAACV,EAAD,CACEE,KAAMnC,KAAKF,MAAM2C,SAASE,GAC1BP,GAAIpC,KAAKF,MAAMwC,OAAOK,O,+BAKhC,OACQ,qCACE,gCACG3C,KAAK4C,UAAU,GACf5C,KAAK4C,UAAU,GACf5C,KAAK4C,UAAU,MAEnB,gCACI5C,KAAK4C,UAAU,GACf5C,KAAK4C,UAAU,GACf5C,KAAK4C,UAAU,a,GA3BZb,IAAMC,WAkCxBa,E,kDACF,WAAYX,GAAQ,IAAD,8BACf,cAAMA,IACDY,UAAY,CACb,YACA,YACA,eACA,aACA,SACA,UARW,E,qDAYf,OACQ,qCACE,yDACA,cAAC,EAAD,CACEJ,MAAO1C,KAAK8C,YAEd,cAAC,EAAD,W,GAnBSf,IAAMC,WAgClBe,MANf,WACE,OACE,cAAC,EAAD,KCnKWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.1f72550c.chunk.js","sourcesContent":["// SPDX-FileCopyrightText: 2020 Robert Cohn\n//\n// SPDX-License-Identifier: MIT\n\nimport React from 'react';\nimport {\n    VictoryAxis,\n    VictoryBrushContainer,\n    VictoryChart,\n    VictoryLine,\n    VictoryZoomContainer,\n} from 'victory';\n\nimport './App.css';\n\nclass StripChart extends React.Component {\n    constructor() {\n        super();\n        this.state = {};\n    }\n\n    handleZoom(domain) {\n        this.setState({selectedDomain: domain});\n    }\n\n    handleBrush(domain) {\n        this.setState({zoomDomain: domain});\n    }\n\n    render() {\n        return (\n            <div>\n              <VictoryChart\n                width={550}\n                height={300}\n                scale={{x: \"time\"}}\n                containerComponent={\n                    <VictoryZoomContainer\n                      responsive={false}\n                      zoomDimension=\"x\"\n                      zoomDomain={this.state.zoomDomain}\n                      onZoomDomainChange={this.handleZoom.bind(this)}\n                    />\n                }\n              >\n                <VictoryLine\n                  style={{\n                      data: {stroke: \"tomato\"}\n                  }}\n                  data={[\n                      {x: new Date(1982, 1, 1), y: 125},\n                      {x: new Date(1987, 1, 1), y: 257},\n                      {x: new Date(1993, 1, 1), y: 345},\n                      {x: new Date(1997, 1, 1), y: 515},\n                      {x: new Date(2001, 1, 1), y: 132},\n                      {x: new Date(2005, 1, 1), y: 305},\n                      {x: new Date(2011, 1, 1), y: 270},\n                      {x: new Date(2015, 1, 1), y: 470}\n                  ]}\n                />\n\n              </VictoryChart>\n\n              <VictoryChart\n                width={550}\n                height={90}\n                scale={{x: \"time\"}}\n                padding={{top: 0, left: 50, right: 50, bottom: 30}}\n                containerComponent={\n                    <VictoryBrushContainer responsive={false}\n                                           brushDimension=\"x\"\n                                           brushDomain={this.state.selectedDomain}\n                                           onBrushDomainChange={this.handleBrush.bind(this)}\n                    />\n                }\n              >\n                <VictoryAxis\n                  tickValues={[\n                      new Date(1985, 1, 1),\n                      new Date(1990, 1, 1),\n                      new Date(1995, 1, 1),\n                      new Date(2000, 1, 1),\n                      new Date(2005, 1, 1),\n                      new Date(2010, 1, 1),\n                      new Date(2015, 1, 1)\n                  ]}\n                  tickFormat={(x) => new Date(x).getFullYear()}\n                />\n                <VictoryLine\n                  style={{\n                      data: {stroke: \"tomato\"}\n                  }}\n                  data={[\n                      {x: new Date(1982, 1, 1), y: 125},\n                      {x: new Date(1987, 1, 1), y: 257},\n                      {x: new Date(1993, 1, 1), y: 345},\n                      {x: new Date(1997, 1, 1), y: 515},\n                      {x: new Date(2001, 1, 1), y: 132},\n                      {x: new Date(2005, 1, 1), y: 305},\n                      {x: new Date(2011, 1, 1), y: 270},\n                      {x: new Date(2015, 1, 1), y: 470}\n                  ]}\n                />\n              </VictoryChart>\n            </div>\n        );\n    }\n}\n\n\n\nfunction Led(props) {\n    return (\n      <div> {props.name} : {props.on ? 'On' : 'Off' } </div>\n    );\n}\n\nclass LedMatrix extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            led_on: Array(9).fill(false),\n            led_name: props.names\n        }\n    }\n    renderLed(index) {\n        return (\n                <Led\n                  name={this.state.led_name[index]}\n                  on={this.state.led_on[index]}\n                />\n        );\n    }\n    render() {\n        return (\n                <>\n                  <div>\n                    {this.renderLed(0)}\n                    {this.renderLed(1)}\n                    {this.renderLed(2)}\n                 </div>\n                 <div>\n                    {this.renderLed(3)}\n                    {this.renderLed(4)}\n                    {this.renderLed(5)}\n                 </div>\n               </>\n        );\n    }\n}\n\nclass ControlPanel extends React.Component {\n    constructor(props) {\n        super(props);\n        this.led_names = [\n            '1st Floor',\n            '2nd Floor',\n            'Water Heater',\n            'Oil Burner',\n            'Unused',\n            'Unused'\n        ]\n    }\n    render() {\n        return (\n                <>\n                  <h1> Sensepy Control Panel </h1>\n                  <LedMatrix\n                    names={this.led_names}\n                  />\n                  <StripChart />\n                </>\n        )\n    }\n}\n\n\nfunction App() {\n  return (\n    <ControlPanel />\n  );\n}\n\nexport default App;\n","// SPDX-FileCopyrightText: 2020 Robert Cohn\n//\n// SPDX-License-Identifier: MIT\n\nconst reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// SPDX-FileCopyrightText: 2020 Robert Cohn\n//\n// SPDX-License-Identifier: MIT\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}